services:
  db:
    image: postgres:17
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  storage:
    image: minio/minio:latest
    command: server --console-address ":9090" /data
    volumes:
      - storage_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER?Variable not set}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD?Variable not set}
    ports:
      - "9000:9000"
      - "9090:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["/bin/bash", "/app/scripts/entrypoint.sh"]
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
      - STORAGE_URL=http://storage:9000/

    ports:
      - "8000:8000"
    depends_on:
      - db
      - storage

volumes:
  db_data: {}
  storage_data: {}
